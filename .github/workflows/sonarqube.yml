name: SonarQube Analysis

on:
  workflow_call:
    inputs:
      sonar-token:
        description: 'SonarQube token'
        required: true
        type: string
      github-token:
        description: 'GitHub token'
        required: true
        type: string
    outputs:
      quality-gate-status:
        description: 'Quality Gate status'
        value: ${{ jobs.sonarqube.outputs.quality-gate-status }}

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    outputs:
      quality-gate-status: ${{ steps.sonarqube-quality-gate-check.outcome }}
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: üîß Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: 'backend/package-lock.json'

    - name: üì¶ Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: üèóÔ∏è Build application
      working-directory: ./backend
      run: npm run build

    - name: üß™ Run tests with coverage
      working-directory: ./backend
      run: npm run test:ci
      env:
        NODE_ENV: test
        CI: true

    - name: üìä Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: üìä SonarQube Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
      with:
        args: >
          -Dsonar.projectKey=BorgesLeonardo_CatolicaSC-Portfolio
          -Dsonar.organization=catolicasc-portfolio
          -Dsonar.sources=backend/src
          -Dsonar.tests=backend/src/__tests__
          -Dsonar.typescript.lcov.reportPaths=backend/coverage/lcov.info
          -Dsonar.test.inclusions=**/*.test.ts,**/*.spec.ts
          -Dsonar.coverage.exclusions=**/*.test.ts,**/*.spec.ts,**/__tests__/**,**/node_modules/**,**/dist/**,**/coverage/**,**/prisma/**,**/*.config.js,**/*.setup.js
          -Dsonar.cpd.exclusions=**/*.test.ts,**/*.spec.ts,**/__tests__/**,**/prisma/**
          -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/**,**/*.d.ts,**/jest.setup.js,**/jest.config.js,**/eslint.config.js,**/prisma/migrations/**
          -Dsonar.inclusions=backend/src/**/*.ts
          -Dsonar.qualitygate.wait=true
          -Dsonar.scm.provider=git

    - name: üìä Check Quality Gate
      id: sonarqube-quality-gate-check
      uses: sonarqube-quality-gate-action@master
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_HOST_URL: https://sonarcloud.io
      continue-on-error: false

    - name: üìà Quality Gate Results
      if: always()
      run: |
        echo "üîç Quality Gate Status: ${{ steps.sonarqube-quality-gate-check.outcome }}"
        if [ "${{ steps.sonarqube-quality-gate-check.outcome }}" == "failure" ]; then
          echo "‚ùå Quality Gate FAILED - Please check SonarCloud for details"
          echo "üîó SonarCloud URL: https://sonarcloud.io/dashboard?id=BorgesLeonardo_CatolicaSC-Portfolio"
          exit 1
        else
          echo "‚úÖ Quality Gate PASSED"
        fi
