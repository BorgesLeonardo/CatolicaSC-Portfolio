name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Run linter
      working-directory: ./backend
      run: npm run lint

    - name: Run formatter check
      working-directory: ./backend
      run: npm run format -- --check

    - name: Build TypeScript
      working-directory: ./backend
      run: npm run build

    - name: Run tests
      working-directory: ./backend
      run: npm test
      env:
        NODE_ENV: test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Build application
      working-directory: ./backend
      run: npm run build

    - name: Create deployment artifact
      run: |
        cd backend
        tar -czf backend-build.tar.gz dist/ package.json package-lock.json node_modules/

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-build
        path: backend/backend-build.tar.gz
        retention-days: 30

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: backend-build

    - name: Extract build
      run: tar -xzf backend-build.tar.gz

    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        echo "This is where you would deploy to your hosting service"
        echo "Examples: Heroku, Railway, DigitalOcean, AWS, etc."
